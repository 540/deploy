---
# Update code deployment step
- name: Ensure deployment base path exists
  file: state=directory recurse=yes path={{ ansistrano_deploy_to }}

- name: Ensure releases folder exists
  file: state=directory recurse=yes path={{ ansistrano_deploy_to }}/{{ ansistrano_version_dir }}

- name: Ensure shared elements folder exists
  file: state=directory recurse=yes path={{ ansistrano_deploy_to }}/shared

- name: Ensure shared copy for rsync improvement exists (in rsync case)
  file: state=directory recurse=yes path={{ ansistrano_deploy_to }}/.shared-copy
  when: ansistrano_deploy_via == 'rsync'

- name: Get release timestamp
  command: date +%Y%m%d%H%M%S
  register: timestamp

- name: Get release path
  command: echo "{{ ansistrano_deploy_to }}/{{ ansistrano_version_dir }}/{{ timestamp.stdout }}"
  register: release_path

- name: Get releases path
  command: echo "{{ ansistrano_deploy_to }}/{{ ansistrano_version_dir }}"
  register: releases_path

- name: Get shared path (in rsync case)
  command: echo "{{ ansistrano_deploy_to }}/shared/cached-copy"
  register: shared_path
  when: ansistrano_deploy_via == 'rsync'

- name: Rsync application files to remote shared copy (in rsync case)
  synchronize: src={{ ansistrano_deploy_from }} dest={{ shared_path.stdout }} recursive=yes delete=yes archive=yes compress=yes rsync_opts={{ ansistrano_rsync_extra_params }}
  when: ansistrano_deploy_via == 'rsync'

- name: Deploy existing code to servers
  command: cp -pr {{ shared_path.stdout }} {{ release_path.stdout }}
  when: ansistrano_deploy_via == 'rsync'

- name: Deploy existing code to remote servers
  copy: src={{ ansistrano_deploy_from }} dest={{ release_path.stdout }}
  when: ansistrano_deploy_via == 'copy'

- name: Update remote repository
  git: repo={{ ansistrano_git_repo }} dest={{ ansistrano_deploy_to }}/shared version={{ ansistrano_git_branch }} accept_hostkey=true update=yes
  when: ansistrano_deploy_via == 'git'

- name: Export a copy of the repo
  command: git checkout-index -f -a --prefix="{{ release_path.stdout }}/"
  args:
    chdir: "{{ ansistrano_deploy_to }}/shared"
  when: ansistrano_deploy_via == 'git'

- name: Deploy code from to servers
  git: repo={{ ansistrano_deploy_from}} dest={{ release_path.stdout }} accept_hostkey=true
  when: ansistrano_deploy_via == 'git'

- name: Copy release version into REVISION file
  shell: echo {{ timestamp.stdout }} > {{ release_path.stdout }}/REVISION

- name: Touches up the release code
  shell: chmod -R -- g+w {{ release_path.stdout }} && chmod -R g+w {{ release_path.stdout }}
